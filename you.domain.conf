log_format  blog.imfer.me  '$remote_addr - $remote_user [$time_local] "$request" '
             '$status $body_bytes_sent "$http_referer" '
             '"$http_user_agent" $http_x_forwarded_for';

upstream nodejs {
    # NOTE: Adding more servers creates a round robin.
    server 127.0.0.1:3000;
}


server
	{
		listen       80;
		server_name blog.imfer.me;
		index index.html;
		root  /home/wwwroot/blog.imfer.me/publish/;

		add_header "X-UA-Compatible" "IE=Edge,chrome=1";

		error_page 404 /404.html;

		if ($args ~ _escaped_fragment_) {
            		rewrite ^ /api;
        	}

        #if ($request_filename ~ !$) {
        #    rewrite ^ /api;
        #}

		location / {
            # Bounce back the accept-language header to detect the user's language.
            add_header "X-client-accept-lang" $http_accept_language;

           # if ($http_user_agent ~* google(?:bot|\/)|yahoo\!|bingbot|baiduspider|iaskspider|ia_archiver|yandex) {
           #     rewrite ^ /api;
           # }
        }

		

		#location ~ ^(/?_escaped_fragment_=) {
		#		proxy_set_header        Host $host;
		#		proxy_set_header        X-Real-IP $remote_addr;
		#		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		#		proxy_set_header        X-Forwarded-Proto $scheme;
		#		client_max_body_size    10m;
		#		client_body_buffer_size 128k;
		#		proxy_connect_timeout   60s;
		#		proxy_send_timeout      90s;
		#		proxy_read_timeout      90s;
		#		proxy_buffering         off;
		#		proxy_temp_file_write_size 64k;
		#		proxy_pass      http://127.0.0.1:3000;
		#		proxy_redirect      off;
		#}

		location /api {
            # Send the original URI before any modifications.
            # This is needed because error_page changes the URI.

            proxy_set_header X-Request-URI   $request_uri;

            # Set client's IP address

            proxy_set_header X-Real-IP       $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Set original host name

            proxy_set_header Host            $host;

            # Set original port

            proxy_set_header Port            $server_port;

            # Redirect to the Node.js server(s).
            # NOTE: This cannot end with a trailing slash.

            proxy_pass http://nodejs;
            proxy_redirect off;
        }

		location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
			{
				expires      30d;
			}

		location ~ .*\.(js|css)?$
			{
				expires      12h;
			}


		

		access_log  /home/wwwlogs/blog.imfer.me.log  blog.imfer.me;
	}
